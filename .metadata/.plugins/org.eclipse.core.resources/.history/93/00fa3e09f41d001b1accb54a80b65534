package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.model.PostagemModel;
import com.example.demo.repository.PostagemRepository;

@RestController //informa pro Spring que se trata de controlador para receber requisições
@RequestMapping("/postagens") //definir rota ou URL
@CrossOrigin("*") //sinal de vezes, essa classe aceita requisições de qualquer origem

public class PostagemController {
	
	@Autowired //SERVICO DE INJECAO DE DEPENDENCIA DO SPRING. Como é interface, nao dá pra instanciar. Instanciação fica por conta do spring: aí usa autowired
	private PostagemRepository repository; //repository é o nome
	
	@GetMapping //expor para nossa API que este metodo se trata de um get! sempre que vir requisicao externa, no caso requisicao get, dispara este método. 
	//isso é um método
	public ResponseEntity <List<PostagemModel>> GetAll() {
		return ResponseEntity.ok(repository.findAll());
	}
	
	//continuar inserindo dados GETBYID...
	
}

